{
  "hash": "b2464306028688b96dd4bdb654464c10",
  "result": {
    "markdown": "---\ntitle: \"Combining DataFrames\"\nformat: html\nexecute: \n  enabled: true\n  error: true\n  freeze: auto\n---\n\nPreviously, we have seen how to analyze and manipulate data in a single DataFrame. However, you will often find data saved into different files and, therefore, you may need to deal with several different pandas DataFrames.<br>\nIn this session we will explore different ways of combining DataFrames into a single DataFrame.\n\nLet's start loading the `pandas` library, reading two data sets into DataFrames, and having a quick look at the tabular data: ```surveys.csv``` and ```species.csv```\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nsurveys_df = pd.read_csv(\"../course_materials/data/surveys.csv\", keep_default_na=False, na_values=[\"\"])\nspecies_df = pd.read_csv(\"../course_materials/data/species.csv\", keep_default_na=False, na_values=[\"\"])\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nprint(surveys_df.info())\nsurveys_df.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 35549 entries, 0 to 35548\nData columns (total 9 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   record_id        35549 non-null  int64  \n 1   month            35549 non-null  int64  \n 2   day              35549 non-null  int64  \n 3   year             35549 non-null  int64  \n 4   plot_id          35549 non-null  int64  \n 5   species_id       34786 non-null  object \n 6   sex              33038 non-null  object \n 7   hindfoot_length  31438 non-null  float64\n 8   weight           32283 non-null  float64\ndtypes: float64(2), int64(5), object(2)\nmemory usage: 2.4+ MB\nNone\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>32.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>33.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>37.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>7</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>35.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nprint(species_df.info())\nspecies_df.head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 54 entries, 0 to 53\nData columns (total 4 columns):\n #   Column      Non-Null Count  Dtype \n---  ------      --------------  ----- \n 0   species_id  54 non-null     object\n 1   genus       54 non-null     object\n 2   species     54 non-null     object\n 3   taxa        54 non-null     object\ndtypes: object(4)\nmemory usage: 1.8+ KB\nNone\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>species_id</th>\n      <th>genus</th>\n      <th>species</th>\n      <th>taxa</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>AB</td>\n      <td>Amphispiza</td>\n      <td>bilineata</td>\n      <td>Bird</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AH</td>\n      <td>Ammospermophilus</td>\n      <td>harrisi</td>\n      <td>Rodent</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>AS</td>\n      <td>Ammodramus</td>\n      <td>savannarum</td>\n      <td>Bird</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>BA</td>\n      <td>Baiomys</td>\n      <td>taylori</td>\n      <td>Rodent</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CB</td>\n      <td>Campylorhynchus</td>\n      <td>brunneicapillus</td>\n      <td>Bird</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nWe now have two DataFrames. The first, `surveys_df`, contains information on individuals of a species recorded in a survey, while the second, `species_df`, contains more detailed information on each species.\n\n## Concatenating DataFrames\n\nThe first way we will combine DataFrames is **concatenation**, i.e. simply putting DataFrames one after the other either **verically** or **horizontally**.\n\nConcatenation can be used if the DataFrames are similar, meaning that they either have the same rows or columns. We will see examples of this later.\n\nTo concatenate two DataFrames you will use the function ```pd.concat()```, specifying as arguments the DataFrames to concatenate and ```axis=0``` or ```axis=1``` for vertical or horizontal concatenation, respectively.\n\nLet us first obtain two small DataFrames from the larger `surveys.csv` dataset.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Subsetting DataFrames\nsurveys_df_sub_first10 = surveys_df.head(10)\nsurveys_df_sub_last10  = surveys_df.tail(10)\n```\n:::\n\n\nWe now have two DataFrames, one with the first ten rows of the original dataset, and another with the last ten rows.\n\n### Vertical concatenation\n\nLet's start with **vertical stacking**. In this case the two DataFrames are simply stacked 'on top of' eachother (remember to specify ```axis=0```).\n<div>\n<img src=\"images/vertical_stacking.jpeg\" width=\"300\"/>\n</div>\nVertical stacking can be understood as combining two DataFrames that have different sets of the same type of data. In our example, it may be that one field researcher has registered the first ten entries, and another did the last ten, both using the same laboratory sheets. They both wrote down the same information (weight, species, and so on) of all different individuals. If we combine them, we have one list of twenty records, rather than two lists of ten. \n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Stack the DataFrames on top of each other\nvertical_stack = pd.concat([surveys_df_sub_first10, surveys_df_sub_last10], axis=0)\n```\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nprint(vertical_stack.info())\nvertical_stack\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 20 entries, 0 to 35548\nData columns (total 9 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   record_id        20 non-null     int64  \n 1   month            20 non-null     int64  \n 2   day              20 non-null     int64  \n 3   year             20 non-null     int64  \n 4   plot_id          20 non-null     int64  \n 5   species_id       19 non-null     object \n 6   sex              16 non-null     object \n 7   hindfoot_length  15 non-null     float64\n 8   weight           6 non-null      float64\ndtypes: float64(2), int64(5), object(2)\nmemory usage: 1.6+ KB\nNone\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>32.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>33.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>37.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>7</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>35.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>PF</td>\n      <td>M</td>\n      <td>14.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>PE</td>\n      <td>F</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>37.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>34.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>6</td>\n      <td>PF</td>\n      <td>F</td>\n      <td>20.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35539</th>\n      <td>35540</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>23.0</td>\n    </tr>\n    <tr>\n      <th>35540</th>\n      <td>35541</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>24.0</td>\n      <td>31.0</td>\n    </tr>\n    <tr>\n      <th>35541</th>\n      <td>35542</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>29.0</td>\n    </tr>\n    <tr>\n      <th>35542</th>\n      <td>35543</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>27.0</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>35543</th>\n      <td>35544</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>US</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35544</th>\n      <td>35545</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35545</th>\n      <td>35546</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35546</th>\n      <td>35547</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>10</td>\n      <td>RM</td>\n      <td>F</td>\n      <td>15.0</td>\n      <td>14.0</td>\n    </tr>\n    <tr>\n      <th>35547</th>\n      <td>35548</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>7</td>\n      <td>DO</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>51.0</td>\n    </tr>\n    <tr>\n      <th>35548</th>\n      <td>35549</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe resulting DataFrame (```vertical_stack```) consists, as expected, of 20 rows. These are the result of the first and last 10 rows of our original DataFrame ```surveys_df```.\n\nYou may have noticed that the last ten rows have very high index, not consecutive with the first ten rows. This is because concatenation preserves the indices of the two original DataFrames. If you want a brand new set of indices for your concateneted DataFrame, simply reset the indices using the method ```.reset_index()```. Notice that this adds a column `index` to your DataFrame, that maintains the original index. If you pass `drop=True` into the function, you will avoid the addition of this column.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nvertical_stack.reset_index()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>index</th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>32.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>33.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>3</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>37.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>4</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>7</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>5</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>35.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>PF</td>\n      <td>M</td>\n      <td>14.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>7</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>PE</td>\n      <td>F</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>7</td>\n      <td>8</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>37.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8</td>\n      <td>9</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>34.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9</td>\n      <td>10</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>6</td>\n      <td>PF</td>\n      <td>F</td>\n      <td>20.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>35539</td>\n      <td>35540</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>23.0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>35540</td>\n      <td>35541</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>24.0</td>\n      <td>31.0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>35541</td>\n      <td>35542</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>29.0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>35542</td>\n      <td>35543</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>27.0</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>35543</td>\n      <td>35544</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>US</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>35544</td>\n      <td>35545</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>35545</td>\n      <td>35546</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>35546</td>\n      <td>35547</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>10</td>\n      <td>RM</td>\n      <td>F</td>\n      <td>15.0</td>\n      <td>14.0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>35547</td>\n      <td>35548</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>7</td>\n      <td>DO</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>51.0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>35548</td>\n      <td>35549</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<div class=\"alert alert-block alert-success\">\n<b>Exercise 11</b>\n    \nNow go to the Jupyter Dashboard in your internet browser and continue with exercise 11.\n\n### Horizontal concatenation\n\nIt's now time to try **horizontal stacking**. In this case the two DataFrames are simply put one after the other (remember to specify ```axis=1```).\n<div>\n<img src=\"images/horizontal_stacking.jpeg\" width=\"300\"/>\n</div>\nHorizontal stacking can be understood as combining two DataFrames that have different measurements on the same observed objects. In our example, it may be that one field researcher has registered the weight and hindfoot length of an individual, and another wrote down their species and sex. They both registered different information of the same individuals. If we combine them, we have one list with all the information of the individual, rather than two lists with partial information.\n\nWe now go back to our DataFrames with 10 survey result each, and concatenate those. In this case, as a result, we would expect a DataFrame with the same number of rows of the original ones (10 row) and twice the number of columns (18 columns).\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Place the DataFrames side by side\nhorizontal_stack = pd.concat([surveys_df_sub_first10, surveys_df_sub_last10], axis=1)\n```\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nprint(horizontal_stack.info())\nhorizontal_stack\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 20 entries, 0 to 35548\nData columns (total 18 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   record_id        10 non-null     float64\n 1   month            10 non-null     float64\n 2   day              10 non-null     float64\n 3   year             10 non-null     float64\n 4   plot_id          10 non-null     float64\n 5   species_id       10 non-null     object \n 6   sex              10 non-null     object \n 7   hindfoot_length  9 non-null      float64\n 8   weight           0 non-null      float64\n 9   record_id        10 non-null     float64\n 10  month            10 non-null     float64\n 11  day              10 non-null     float64\n 12  year             10 non-null     float64\n 13  plot_id          10 non-null     float64\n 14  species_id       9 non-null      object \n 15  sex              6 non-null      object \n 16  hindfoot_length  6 non-null      float64\n 17  weight           6 non-null      float64\ndtypes: float64(14), object(4)\nmemory usage: 3.0+ KB\nNone\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>2.0</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>32.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>3.0</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>33.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>2.0</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>37.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>7.0</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>3.0</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>35.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>1.0</td>\n      <td>PF</td>\n      <td>M</td>\n      <td>14.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>2.0</td>\n      <td>PE</td>\n      <td>F</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>1.0</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>37.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>1.0</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>34.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10.0</td>\n      <td>7.0</td>\n      <td>16.0</td>\n      <td>1977.0</td>\n      <td>6.0</td>\n      <td>PF</td>\n      <td>F</td>\n      <td>20.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35539</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35540.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>15.0</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>23.0</td>\n    </tr>\n    <tr>\n      <th>35540</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35541.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>15.0</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>24.0</td>\n      <td>31.0</td>\n    </tr>\n    <tr>\n      <th>35541</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35542.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>15.0</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>29.0</td>\n    </tr>\n    <tr>\n      <th>35542</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35543.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>15.0</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>27.0</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>35543</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35544.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>15.0</td>\n      <td>US</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35544</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35545.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>15.0</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35545</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35546.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>15.0</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>35546</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35547.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>10.0</td>\n      <td>RM</td>\n      <td>F</td>\n      <td>15.0</td>\n      <td>14.0</td>\n    </tr>\n    <tr>\n      <th>35547</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35548.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>7.0</td>\n      <td>DO</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>51.0</td>\n    </tr>\n    <tr>\n      <th>35548</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35549.0</td>\n      <td>12.0</td>\n      <td>31.0</td>\n      <td>2002.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nLooking at the result of our horizontal concatenation, we may realise that something went wrong. The total number of rows on the resulting DataFrame is 20, instead of 10.\n\nThis happens because horizontal stacking will only merge rows that actually \"belong together\". Rows that relate to the same observed object are merged. To determine this, it compares the indices of the rows. In our two DataFrames, the rows have different indices (1-9 and 35539-35548 respectively). It will therefore not merge any of the rows together, as it does not find any two rows that relate to the same observation.\n\nIf we want to force the DataFrames into the form we had in mind, we need to reset the indices of the second DataFrame so that they will match the ones of the first DataFrame.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nsurveys_df_sub_last10 = surveys_df_sub_last10.reset_index(drop=True)\n```\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nsurveys_df_sub_last10\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>35540</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>23.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>35541</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>24.0</td>\n      <td>31.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>35542</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>29.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>35543</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>27.0</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>35544</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>US</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>35545</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>35546</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>35547</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>10</td>\n      <td>RM</td>\n      <td>F</td>\n      <td>15.0</td>\n      <td>14.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>35548</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>7</td>\n      <td>DO</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>51.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>35549</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nNow that the index has been reset, we can concatenate the two DataFrames.\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nhorizontal_stack = pd.concat([surveys_df_sub_first10, surveys_df_sub_last10], axis=1)\n```\n:::\n\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nprint(horizontal_stack.info())\nhorizontal_stack\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 10 entries, 0 to 9\nData columns (total 18 columns):\n #   Column           Non-Null Count  Dtype  \n---  ------           --------------  -----  \n 0   record_id        10 non-null     int64  \n 1   month            10 non-null     int64  \n 2   day              10 non-null     int64  \n 3   year             10 non-null     int64  \n 4   plot_id          10 non-null     int64  \n 5   species_id       10 non-null     object \n 6   sex              10 non-null     object \n 7   hindfoot_length  9 non-null      float64\n 8   weight           0 non-null      float64\n 9   record_id        10 non-null     int64  \n 10  month            10 non-null     int64  \n 11  day              10 non-null     int64  \n 12  year             10 non-null     int64  \n 13  plot_id          10 non-null     int64  \n 14  species_id       9 non-null      object \n 15  sex              6 non-null      object \n 16  hindfoot_length  6 non-null      float64\n 17  weight           6 non-null      float64\ndtypes: float64(4), int64(10), object(4)\nmemory usage: 1.5+ KB\nNone\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n      <th>record_id</th>\n      <th>month</th>\n      <th>day</th>\n      <th>year</th>\n      <th>plot_id</th>\n      <th>species_id</th>\n      <th>sex</th>\n      <th>hindfoot_length</th>\n      <th>weight</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>32.0</td>\n      <td>NaN</td>\n      <td>35540</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>23.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>NL</td>\n      <td>M</td>\n      <td>33.0</td>\n      <td>NaN</td>\n      <td>35541</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>24.0</td>\n      <td>31.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>37.0</td>\n      <td>NaN</td>\n      <td>35542</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>26.0</td>\n      <td>29.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>7</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>NaN</td>\n      <td>35543</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>PB</td>\n      <td>F</td>\n      <td>27.0</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>3</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>35.0</td>\n      <td>NaN</td>\n      <td>35544</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>US</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>PF</td>\n      <td>M</td>\n      <td>14.0</td>\n      <td>NaN</td>\n      <td>35545</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>2</td>\n      <td>PE</td>\n      <td>F</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>35546</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>15</td>\n      <td>AH</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>DM</td>\n      <td>M</td>\n      <td>37.0</td>\n      <td>NaN</td>\n      <td>35547</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>10</td>\n      <td>RM</td>\n      <td>F</td>\n      <td>15.0</td>\n      <td>14.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>1</td>\n      <td>DM</td>\n      <td>F</td>\n      <td>34.0</td>\n      <td>NaN</td>\n      <td>35548</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>7</td>\n      <td>DO</td>\n      <td>M</td>\n      <td>36.0</td>\n      <td>51.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>7</td>\n      <td>16</td>\n      <td>1977</td>\n      <td>6</td>\n      <td>PF</td>\n      <td>F</td>\n      <td>20.0</td>\n      <td>NaN</td>\n      <td>35549</td>\n      <td>12</td>\n      <td>31</td>\n      <td>2002</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<div class=\"alert alert-block alert-success\">\n<b>Exercise 12</b>\n    \nNow go to the Jupyter Dashboard in your internet browser and continue with exercise 12.\n\n## Joining DataFrames\n\nConcatenating DataFrames allows you to combine two entire DataFrames into a single one. In many cases, you want to combine only selected parts of two DataFrames.\n\nYou might, for example, want to merge rows of two DataFrames that have matching values in specific columns. The pandas function ```merge()``` performs an operation that you may know as a *join* if you worked with databases before. The join operation joins the content of two DataFrames in a particular way. There are different types of joins, but the workflow to perform a join operation is always the same:\n\n  1. You identify a *left* and a *right* DataFrame, among the two you want to join;\n  2. You identify in both your left and right DataFrame a column (or set of columns) to join on;\n  3. You choose the type of join;\n  4. You perform the join running the function `pd.merge()` with the specified inputs and options.\n\nWhat it means for a DataFrame to be 'left' or 'right' depends on the type of join, and will become clear in the examples below. For now, just remember that it matters which DataFrame you mention first when performing a join.\n\nLet's see some join example considering two tiny (few rows) DataFrames. Our left DataFrame contains general data of European capitals, and our right DataFrame contains weather measurements for some Dutch towns. We first need to import these datasets:\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nleft_df = pd.read_csv(\"../course_materials/data/EU_capitals_tiny.csv\", sep=\",\", header=0)\nright_df = pd.read_csv(\"../course_materials/data/Netherlands_town_weather_tiny.csv\", sep=\",\", header=0)\n```\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nleft_df\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Capital</th>\n      <th>Country</th>\n      <th>Population</th>\n      <th>Time_zone</th>\n      <th>Elevation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Amsterdam</td>\n      <td>The Netherland</td>\n      <td>2480394</td>\n      <td>UTC+1</td>\n      <td>-2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Rome</td>\n      <td>Italy</td>\n      <td>1459402</td>\n      <td>UTC+1</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Paris</td>\n      <td>France</td>\n      <td>10858852</td>\n      <td>UTC+1</td>\n      <td>131</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Madrid</td>\n      <td>Spain</td>\n      <td>6791667</td>\n      <td>UTC+1</td>\n      <td>650</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Berlin</td>\n      <td>Germany</td>\n      <td>4473101</td>\n      <td>UTC+1</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Lisbon</td>\n      <td>Portugal</td>\n      <td>2719000</td>\n      <td>UTC+1</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nright_df\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Town</th>\n      <th>Elevation</th>\n      <th>Temperature</th>\n      <th>Humidity</th>\n      <th>Wind dir</th>\n      <th>Wind strengh</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Amsterdam</td>\n      <td>2</td>\n      <td>12</td>\n      <td>81</td>\n      <td>SW</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Arnhem</td>\n      <td>13</td>\n      <td>12</td>\n      <td>82</td>\n      <td>S</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Utrecht</td>\n      <td>5</td>\n      <td>13</td>\n      <td>78</td>\n      <td>S</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Rotterdam</td>\n      <td>0</td>\n      <td>13</td>\n      <td>84</td>\n      <td>SW</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Leiden</td>\n      <td>0</td>\n      <td>12</td>\n      <td>89</td>\n      <td>SW</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Den Haag</td>\n      <td>1</td>\n      <td>12</td>\n      <td>85</td>\n      <td>SW</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Rotterdam</td>\n      <td>0</td>\n      <td>13</td>\n      <td>84</td>\n      <td>SW</td>\n      <td>16</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe column we want to perform the join on is the one containing information about the town. In the left DataFrame this has name *Capital* while in the right one *Town*.\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\ninner_join = pd.merge(left_df,right_df,left_on='Capital',right_on='Town',how='inner')\ninner_join\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Capital</th>\n      <th>Country</th>\n      <th>Population</th>\n      <th>Time_zone</th>\n      <th>Elevation_x</th>\n      <th>Town</th>\n      <th>Elevation_y</th>\n      <th>Temperature</th>\n      <th>Humidity</th>\n      <th>Wind dir</th>\n      <th>Wind strengh</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Amsterdam</td>\n      <td>The Netherland</td>\n      <td>2480394</td>\n      <td>UTC+1</td>\n      <td>-2</td>\n      <td>Amsterdam</td>\n      <td>2</td>\n      <td>12</td>\n      <td>81</td>\n      <td>SW</td>\n      <td>21</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nAs you may notice, the resulting DataFrame has only one line, the only row that the columns *Capital* and *Town* have in common (*Amsterdam*). This is because an inner join selects only those row values that are **the same** in the two columns (mathematically, an intersection).\n\nThe columns of the two DataFrames are all preserved, even if they have the same name. In our case, both left and right DataFrames have a column with the same name (*Elevation*). After merging, the two columns are preserved, but with a suffix to distinguish them. If you are not happy with the default suffix, you may specify yours in the list of arguments of the ```pd.merge``` functions.\n\nLet's now look at the other joins:\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\nleft_join = pd.merge(left_df,right_df,left_on='Capital',right_on='Town',how='left')\nleft_join\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Capital</th>\n      <th>Country</th>\n      <th>Population</th>\n      <th>Time_zone</th>\n      <th>Elevation_x</th>\n      <th>Town</th>\n      <th>Elevation_y</th>\n      <th>Temperature</th>\n      <th>Humidity</th>\n      <th>Wind dir</th>\n      <th>Wind strengh</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Amsterdam</td>\n      <td>The Netherland</td>\n      <td>2480394</td>\n      <td>UTC+1</td>\n      <td>-2</td>\n      <td>Amsterdam</td>\n      <td>2.0</td>\n      <td>12.0</td>\n      <td>81.0</td>\n      <td>SW</td>\n      <td>21.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Rome</td>\n      <td>Italy</td>\n      <td>1459402</td>\n      <td>UTC+1</td>\n      <td>21</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Paris</td>\n      <td>France</td>\n      <td>10858852</td>\n      <td>UTC+1</td>\n      <td>131</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Madrid</td>\n      <td>Spain</td>\n      <td>6791667</td>\n      <td>UTC+1</td>\n      <td>650</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Berlin</td>\n      <td>Germany</td>\n      <td>4473101</td>\n      <td>UTC+1</td>\n      <td>34</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Lisbon</td>\n      <td>Portugal</td>\n      <td>2719000</td>\n      <td>UTC+1</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\nright_join = pd.merge(left_df,right_df,left_on='Capital',right_on='Town',how='right')\nright_join\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Capital</th>\n      <th>Country</th>\n      <th>Population</th>\n      <th>Time_zone</th>\n      <th>Elevation_x</th>\n      <th>Town</th>\n      <th>Elevation_y</th>\n      <th>Temperature</th>\n      <th>Humidity</th>\n      <th>Wind dir</th>\n      <th>Wind strengh</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Amsterdam</td>\n      <td>The Netherland</td>\n      <td>2480394.0</td>\n      <td>UTC+1</td>\n      <td>-2.0</td>\n      <td>Amsterdam</td>\n      <td>2</td>\n      <td>12</td>\n      <td>81</td>\n      <td>SW</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Arnhem</td>\n      <td>13</td>\n      <td>12</td>\n      <td>82</td>\n      <td>S</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Utrecht</td>\n      <td>5</td>\n      <td>13</td>\n      <td>78</td>\n      <td>S</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Rotterdam</td>\n      <td>0</td>\n      <td>13</td>\n      <td>84</td>\n      <td>SW</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Leiden</td>\n      <td>0</td>\n      <td>12</td>\n      <td>89</td>\n      <td>SW</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Den Haag</td>\n      <td>1</td>\n      <td>12</td>\n      <td>85</td>\n      <td>SW</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Rotterdam</td>\n      <td>0</td>\n      <td>13</td>\n      <td>84</td>\n      <td>SW</td>\n      <td>16</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\nouter_join = pd.merge(left_df,right_df,left_on='Capital',right_on='Town',how='outer')\nouter_join\n```\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Capital</th>\n      <th>Country</th>\n      <th>Population</th>\n      <th>Time_zone</th>\n      <th>Elevation_x</th>\n      <th>Town</th>\n      <th>Elevation_y</th>\n      <th>Temperature</th>\n      <th>Humidity</th>\n      <th>Wind dir</th>\n      <th>Wind strengh</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Amsterdam</td>\n      <td>The Netherland</td>\n      <td>2480394.0</td>\n      <td>UTC+1</td>\n      <td>-2.0</td>\n      <td>Amsterdam</td>\n      <td>2.0</td>\n      <td>12.0</td>\n      <td>81.0</td>\n      <td>SW</td>\n      <td>21.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Rome</td>\n      <td>Italy</td>\n      <td>1459402.0</td>\n      <td>UTC+1</td>\n      <td>21.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Paris</td>\n      <td>France</td>\n      <td>10858852.0</td>\n      <td>UTC+1</td>\n      <td>131.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Madrid</td>\n      <td>Spain</td>\n      <td>6791667.0</td>\n      <td>UTC+1</td>\n      <td>650.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Berlin</td>\n      <td>Germany</td>\n      <td>4473101.0</td>\n      <td>UTC+1</td>\n      <td>34.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Lisbon</td>\n      <td>Portugal</td>\n      <td>2719000.0</td>\n      <td>UTC+1</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Arnhem</td>\n      <td>13.0</td>\n      <td>12.0</td>\n      <td>82.0</td>\n      <td>S</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Utrecht</td>\n      <td>5.0</td>\n      <td>13.0</td>\n      <td>78.0</td>\n      <td>S</td>\n      <td>18.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Rotterdam</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>84.0</td>\n      <td>SW</td>\n      <td>13.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Rotterdam</td>\n      <td>0.0</td>\n      <td>13.0</td>\n      <td>84.0</td>\n      <td>SW</td>\n      <td>16.0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Leiden</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>89.0</td>\n      <td>SW</td>\n      <td>19.0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Den Haag</td>\n      <td>1.0</td>\n      <td>12.0</td>\n      <td>85.0</td>\n      <td>SW</td>\n      <td>19.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nTo resume: a join always merges rows that have matching values in the columns that you merge on. Which rows you find in the resulting DataFrame, depends on the type of join:\n- An inner join selects only the rows that result from the combination of matching rows in both the original left and right DataFrames (intersection);\n- A left join selects all rows that were in the original left DataFrame, some of which may have been joined with a matching entry from the right DataFrame;\n- A right join selects all rows that were in the original right DataFrame, some of which may have been joined with a matching entry from the left DataFrame;\n- An outer join merges the two DataFrames and keeps all resulting rows.\n\nTo better understand how join works, it may be useful to look at the diagrams below:\n\n<div>\n<img src=\"images/joins.jpeg\" width=\"600\"/>\n</div>\n\n  - Do you want to select only **common** information between the two DataFrames? Then you use an **inner join**;\n  - Do you want to **add information** to your **left** DataFrame? Then you use a **left join**;\n  - Do you want to **add information** to your **right** DataFrame? Then you use a **right join**;\n  - Do you want to get **all the information** from the two DataFrames? Then you use an **outer join**.\n\nWe will continue with [Data visualization](data-science-with-pandas-4.ipynb).\n\n",
    "supporting": [
      "data-science-with-pandas-3_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}